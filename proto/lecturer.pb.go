// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: lecturer.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type LecturerListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  uint32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Name  string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *LecturerListRequest) Reset() {
	*x = LecturerListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lecturer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LecturerListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LecturerListRequest) ProtoMessage() {}

func (x *LecturerListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lecturer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LecturerListRequest.ProtoReflect.Descriptor instead.
func (*LecturerListRequest) Descriptor() ([]byte, []int) {
	return file_lecturer_proto_rawDescGZIP(), []int{0}
}

func (x *LecturerListRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *LecturerListRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *LecturerListRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type LecturerListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32           `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Data  []*LecturerInfo `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *LecturerListResponse) Reset() {
	*x = LecturerListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lecturer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LecturerListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LecturerListResponse) ProtoMessage() {}

func (x *LecturerListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lecturer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LecturerListResponse.ProtoReflect.Descriptor instead.
func (*LecturerListResponse) Descriptor() ([]byte, []int) {
	return file_lecturer_proto_rawDescGZIP(), []int{1}
}

func (x *LecturerListResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *LecturerListResponse) GetData() []*LecturerInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type LecturerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LecturerId int32  `protobuf:"varint,1,opt,name=lecturerId,proto3" json:"lecturerId,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Avatar     string `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Title      string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	CreatedAt  string `protobuf:"bytes,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *LecturerInfo) Reset() {
	*x = LecturerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lecturer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LecturerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LecturerInfo) ProtoMessage() {}

func (x *LecturerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_lecturer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LecturerInfo.ProtoReflect.Descriptor instead.
func (*LecturerInfo) Descriptor() ([]byte, []int) {
	return file_lecturer_proto_rawDescGZIP(), []int{2}
}

func (x *LecturerInfo) GetLecturerId() int32 {
	if x != nil {
		return x.LecturerId
	}
	return 0
}

func (x *LecturerInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LecturerInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *LecturerInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *LecturerInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

var File_lecturer_proto protoreflect.FileDescriptor

var file_lecturer_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x53, 0x0a, 0x13, 0x4c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4f, 0x0a, 0x14, 0x4c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x21, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x4c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8e, 0x01, 0x0a, 0x0c, 0x4c, 0x65, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x65, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x65, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x32, 0x4a, 0x0a, 0x08, 0x4c, 0x65, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x2e, 0x4c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x4c,
	0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lecturer_proto_rawDescOnce sync.Once
	file_lecturer_proto_rawDescData = file_lecturer_proto_rawDesc
)

func file_lecturer_proto_rawDescGZIP() []byte {
	file_lecturer_proto_rawDescOnce.Do(func() {
		file_lecturer_proto_rawDescData = protoimpl.X.CompressGZIP(file_lecturer_proto_rawDescData)
	})
	return file_lecturer_proto_rawDescData
}

var file_lecturer_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_lecturer_proto_goTypes = []interface{}{
	(*LecturerListRequest)(nil),  // 0: LecturerListRequest
	(*LecturerListResponse)(nil), // 1: LecturerListResponse
	(*LecturerInfo)(nil),         // 2: LecturerInfo
}
var file_lecturer_proto_depIdxs = []int32{
	2, // 0: LecturerListResponse.data:type_name -> LecturerInfo
	0, // 1: Lecturer.GetLecturerList:input_type -> LecturerListRequest
	1, // 2: Lecturer.GetLecturerList:output_type -> LecturerListResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_lecturer_proto_init() }
func file_lecturer_proto_init() {
	if File_lecturer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_lecturer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LecturerListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lecturer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LecturerListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lecturer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LecturerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lecturer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_lecturer_proto_goTypes,
		DependencyIndexes: file_lecturer_proto_depIdxs,
		MessageInfos:      file_lecturer_proto_msgTypes,
	}.Build()
	File_lecturer_proto = out.File
	file_lecturer_proto_rawDesc = nil
	file_lecturer_proto_goTypes = nil
	file_lecturer_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LecturerClient is the client API for Lecturer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LecturerClient interface {
	GetLecturerList(ctx context.Context, in *LecturerListRequest, opts ...grpc.CallOption) (*LecturerListResponse, error)
}

type lecturerClient struct {
	cc grpc.ClientConnInterface
}

func NewLecturerClient(cc grpc.ClientConnInterface) LecturerClient {
	return &lecturerClient{cc}
}

func (c *lecturerClient) GetLecturerList(ctx context.Context, in *LecturerListRequest, opts ...grpc.CallOption) (*LecturerListResponse, error) {
	out := new(LecturerListResponse)
	err := c.cc.Invoke(ctx, "/Lecturer/GetLecturerList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LecturerServer is the server API for Lecturer service.
type LecturerServer interface {
	GetLecturerList(context.Context, *LecturerListRequest) (*LecturerListResponse, error)
}

// UnimplementedLecturerServer can be embedded to have forward compatible implementations.
type UnimplementedLecturerServer struct {
}

func (*UnimplementedLecturerServer) GetLecturerList(context.Context, *LecturerListRequest) (*LecturerListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLecturerList not implemented")
}

func RegisterLecturerServer(s *grpc.Server, srv LecturerServer) {
	s.RegisterService(&_Lecturer_serviceDesc, srv)
}

func _Lecturer_GetLecturerList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LecturerListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LecturerServer).GetLecturerList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Lecturer/GetLecturerList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LecturerServer).GetLecturerList(ctx, req.(*LecturerListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Lecturer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Lecturer",
	HandlerType: (*LecturerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetLecturerList",
			Handler:    _Lecturer_GetLecturerList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lecturer.proto",
}
